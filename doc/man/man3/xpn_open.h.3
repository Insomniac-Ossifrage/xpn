.TH "xpn_open.h" 3 "Wed May 24 2023" "Version Expand version 1.0r5" "Expand" \" -*- nroff -*-
.ad l
.nh
.SH NAME
xpn_open.h \- Header file to 'TODO'\&.  

.SH SYNOPSIS
.br
.PP
\fC#include 'xpn\&.h'\fP
.br
\fC#include 'xpn_file\&.h'\fP
.br
\fC#include 'xpn_policy_open\&.h'\fP
.br
\fC#include 'xpn_policy_cwd\&.h'\fP
.br
\fC#include 'xpn_init\&.h'\fP
.br
\fC#include 'xpn_rw\&.h'\fP
.br
\fC#include 'base/workers\&.h'\fP
.br

.SS "Functions"

.in +1c
.ti -1c
.RI "FILE * \fBxpn_fopencookie\fP (const char *path, const char *mode)"
.br
.RI "'TODO'\&. "
.ti -1c
.RI "int \fBxpn_simple_open\fP (const char *path, int flags, mode_t mode)"
.br
.RI "'TODO'\&. "
.ti -1c
.RI "int \fBxpn_simple_creat\fP (const char *path, mode_t perm)"
.br
.RI "'TODO'\&. "
.ti -1c
.RI "FILE * \fBxpn_simple_fopen\fP (const char *filename, const char *mode)"
.br
.RI "'TODO'\&. "
.ti -1c
.RI "int \fBxpn_simple_close\fP (int fd)"
.br
.RI "'TODO'\&. "
.ti -1c
.RI "int \fBxpn_simple_unlink\fP (const char *path)"
.br
.RI "'TODO'\&. "
.ti -1c
.RI "int \fBxpn_simple_rename\fP (const char *path, const char *newpath)"
.br
.RI "'TODO'\&. "
.ti -1c
.RI "int \fBxpn_simple_fstat\fP (int fd, struct stat *sb)"
.br
.RI "'TODO'\&. "
.ti -1c
.RI "int \fBxpn_simple_fclose\fP (FILE *fp)"
.br
.RI "'TODO'\&. "
.ti -1c
.RI "int \fBxpn_simple_stat\fP (const char *path, struct stat *sb)"
.br
.RI "'TODO'\&. "
.ti -1c
.RI "int \fBxpn_simple_chown\fP (const char *path, uid_t owner, gid_t group)"
.br
.RI "'TODO'\&. "
.ti -1c
.RI "int \fBxpn_simple_fchown\fP (int fd, uid_t owner, gid_t group)"
.br
.RI "'TODO'\&. "
.ti -1c
.RI "int \fBxpn_simple_chmod\fP (const char *path, mode_t mode)"
.br
.RI "'TODO'\&. "
.ti -1c
.RI "int \fBxpn_simple_fchmod\fP (int fd, mode_t mode)"
.br
.RI "'TODO'\&. "
.ti -1c
.RI "int \fBxpn_simple_truncate\fP (const char *path, off_t length)"
.br
.RI "'TODO'\&. "
.ti -1c
.RI "int \fBxpn_simple_ftruncate\fP (int fd, off_t length)"
.br
.RI "'TODO'\&. "
.ti -1c
.RI "int \fBxpn_simple_dup\fP (int fd)"
.br
.RI "'TODO'\&. "
.ti -1c
.RI "int \fBxpn_simple_dup2\fP (int fd, int fd2)"
.br
.RI "'TODO'\&. "
.ti -1c
.RI "int \fBxpn_simple_flush\fP (const char *virtual_path, const char *storage_path)"
.br
.RI "'TODO'\&. "
.ti -1c
.RI "int \fBxpn_simple_preload\fP (const char *virtual_path, const char *storage_path)"
.br
.RI "'TODO'\&. "
.in -1c
.SH "Detailed Description"
.PP 
Header file to 'TODO'\&. 

Header file to 'TODO'\&.
.PP
\fBAuthors\fP
.RS 4
Felix Garcia Carballeira, Diego Camarmas Alonso, Alejandro Calderon Mateos, Luis Miguel Sanchez Garcia, Borja Bergua Guerra 
.RE
.PP
\fBDate\fP
.RS 4
Jul 22, 2021 
.RE
.PP
\fBBug\fP
.RS 4
No known bugs\&. 
.RE
.PP

.PP
Definition in file \fBxpn_open\&.h\fP\&.
.SH "Function Documentation"
.PP 
.SS "FILE * xpn_fopencookie (const char * path, const char * mode)"

.PP
'TODO'\&. 'TODO'\&.
.PP
\fBParameters\fP
.RS 4
\fIpath\fP 'TODO'\&. 
.br
\fImode\fP 'TODO'\&. 
.RE
.PP
\fBReturns\fP
.RS 4
'TODO'\&. 
.RE
.PP

.PP
Definition at line \fB82\fP of file \fBxpn/xpn_simple/xpncore/xpn_stdio\&.c\fP\&.
.SS "int xpn_simple_chmod (const char * path, mode_t mode)"

.PP
'TODO'\&. 'TODO'\&.
.PP
\fBParameters\fP
.RS 4
\fIpath\fP 'TODO'\&. 
.br
\fImode\fP 'TODO'\&. 
.RE
.PP
\fBReturns\fP
.RS 4
'TODO'\&. 
.RE
.PP

.SS "int xpn_simple_chown (const char * path, uid_t owner, gid_t group)"

.PP
'TODO'\&. 'TODO'\&.
.PP
\fBParameters\fP
.RS 4
\fIpath\fP 'TODO'\&. 
.br
\fIowner\fP 'TODO'\&. 
.br
\fIgroup\fP 'TODO'\&. 
.RE
.PP
\fBReturns\fP
.RS 4
'TODO'\&. 
.RE
.PP

.SS "int xpn_simple_close (int fd)"

.PP
'TODO'\&. 'TODO'\&.
.PP
\fBParameters\fP
.RS 4
\fIfd\fP 'TODO'\&. 
.RE
.PP
\fBReturns\fP
.RS 4
'TODO'\&. 
.RE
.PP

.PP
Definition at line \fB931\fP of file \fBxpn_open\&.c\fP\&.
.PP
References \fBxpn_filedesc::data_vfh\fP, \fBxpn_filedesc::links\fP, \fBxpn_fh::n_nfih\fP, \fBnfi_ops::nfi_close\fP, \fBxpn_fh::nfih\fP, \fBnfi_server::ops\fP, \fBnfi_fhandle::server\fP, \fBXPN_DEBUG_BEGIN_CUSTOM\fP, \fBXPN_DEBUG_END_CUSTOM\fP, \fBxpn_err()\fP, \fBxpn_file_table\fP, \fBXPN_MAX_FILE\fP, and \fBXPN_OK\fP\&.
.PP
Referenced by \fBxpn_cleaner()\fP, \fBxpn_close()\fP, and \fBxpn_simple_fclose()\fP\&.
.SS "int xpn_simple_creat (const char * path, mode_t perm)"

.PP
'TODO'\&. 'TODO'\&.
.PP
\fBParameters\fP
.RS 4
\fIpath\fP 'TODO'\&. 
.br
\fIperm\fP 'TODO'\&. 
.RE
.PP
\fBReturns\fP
.RS 4
'TODO'\&. 
.RE
.PP

.PP
Definition at line \fB812\fP of file \fBxpn_open\&.c\fP\&.
.PP
References \fBPATH_MAX\fP, \fBXPN_DEBUG_BEGIN_ARGS1\fP, \fBXPN_DEBUG_END_ARGS1\fP, \fBxpn_err()\fP, \fBxpn_internal_creat()\fP, \fBxpn_internal_open()\fP, \fBxpn_internal_remove()\fP, and \fBXPN_OK\fP\&.
.PP
Referenced by \fBxpn_creat()\fP\&.
.SS "int xpn_simple_dup (int fd)"

.PP
'TODO'\&. 'TODO'\&.
.PP
\fBParameters\fP
.RS 4
\fIfd\fP 'TODO'\&. 
.RE
.PP
\fBReturns\fP
.RS 4
'TODO'\&. 
.RE
.PP

.PP
Definition at line \fB1351\fP of file \fBxpn_open\&.c\fP\&.
.PP
References \fBxpn_filedesc::links\fP, \fBxpn_file_table\fP, and \fBXPN_MAX_FILE\fP\&.
.PP
Referenced by \fBxpn_dup()\fP\&.
.SS "int xpn_simple_dup2 (int fd, int fd2)"

.PP
'TODO'\&. 'TODO'\&.
.PP
\fBParameters\fP
.RS 4
\fIfd\fP 'TODO'\&. 
.br
\fIfd2\fP 'TODO'\&. 
.RE
.PP
\fBReturns\fP
.RS 4
'TODO'\&. 
.RE
.PP

.PP
Definition at line \fB1381\fP of file \fBxpn_open\&.c\fP\&.
.PP
References \fBxpn_filedesc::links\fP, \fBxpn_file_table\fP, and \fBXPN_MAX_FILE\fP\&.
.PP
Referenced by \fBxpn_dup2()\fP\&.
.SS "int xpn_simple_fchmod (int fd, mode_t mode)"

.PP
'TODO'\&. 'TODO'\&.
.PP
\fBParameters\fP
.RS 4
\fIfd\fP 'TODO'\&. 
.br
\fImode\fP 'TODO'\&. 
.RE
.PP
\fBReturns\fP
.RS 4
'TODO'\&. 
.RE
.PP

.SS "int xpn_simple_fchown (int fd, uid_t owner, gid_t group)"

.PP
'TODO'\&. 'TODO'\&.
.PP
\fBParameters\fP
.RS 4
\fIfd\fP 'TODO'\&. 
.br
\fIowner\fP 'TODO'\&. 
.br
\fIgroup\fP 'TODO'\&. 
.RE
.PP
\fBReturns\fP
.RS 4
'TODO'\&. 
.RE
.PP

.SS "int xpn_simple_fclose (FILE * fp)"

.PP
'TODO'\&. 'TODO'\&.
.PP
\fBParameters\fP
.RS 4
\fIfp\fP 'TODO'\&. 
.RE
.PP
\fBReturns\fP
.RS 4
'TODO'\&. 
.RE
.PP

.PP
Definition at line \fB174\fP of file \fBxpn/xpn_simple/xpncore/xpn_stdio\&.c\fP\&.
.SS "int xpn_simple_flush (const char * virtual_path, const char * storage_path)"

.PP
'TODO'\&. 'TODO'\&.
.PP
\fBParameters\fP
.RS 4
\fIvirtual_path\fP 'TODO'\&. 
.br
\fIstorage_path\fP 'TODO'\&. 
.RE
.PP
\fBReturns\fP
.RS 4
'TODO'\&. 
.RE
.PP

.PP
Definition at line \fB724\fP of file \fBxpn_open\&.c\fP\&.
.PP
References \fBnfi_worker_do_flush()\fP, \fBnfiworker_wait()\fP, \fBop_xpn_flush\fP, \fBPATH_MAX\fP, \fBnfi_worker::thread\fP, \fBnfi_server::wrk\fP, \fBXPN_DATA_SERVER\fP, \fBxpn_err()\fP, \fBnfi_server::xpn_thread\fP, \fBXpnCreateMetadata()\fP, \fBXPNERR_PARAM\fP, \fBXPNERR_PART_NOEXIST\fP, \fBXPNERR_PATH_NOEXIST\fP, \fBXpnGetAbsolutePath()\fP, \fBXpnGetMetadataPos()\fP, \fBXpnGetPartition()\fP, \fBXpnGetServers()\fP, and \fBXpnGetURLServer()\fP\&.
.PP
Referenced by \fBxpn_flush()\fP\&.
.SS "FILE * xpn_simple_fopen (const char * filename, const char * mode)"

.PP
'TODO'\&. 'TODO'\&.
.PP
\fBParameters\fP
.RS 4
\fIfilename\fP 'TODO'\&. 
.br
\fImode\fP 'TODO'\&. 
.RE
.PP
\fBReturns\fP
.RS 4
'TODO'\&. 
.RE
.PP

.PP
Definition at line \fB129\fP of file \fBxpn/xpn_simple/xpncore/xpn_stdio\&.c\fP\&.
.SS "int xpn_simple_fstat (int fd, struct stat * sb)"

.PP
'TODO'\&. 'TODO'\&.
.PP
\fBParameters\fP
.RS 4
\fIfd\fP 'TODO'\&. 
.br
\fIsb\fP 'TODO'\&. 
.RE
.PP
\fBReturns\fP
.RS 4
'TODO'\&. 
.RE
.PP

.PP
Definition at line \fB1254\fP of file \fBxpn_open\&.c\fP\&.
.PP
References \fBerrno\fP, \fBXPN_DEBUG_BEGIN_CUSTOM\fP, \fBXPN_DEBUG_END_CUSTOM\fP, and \fBXpnGetAtribFd()\fP\&.
.PP
Referenced by \fBxpn_fstat()\fP, and \fBxpn_simple_lseek()\fP\&.
.SS "int xpn_simple_ftruncate (int fd, off_t length)"

.PP
'TODO'\&. 'TODO'\&.
.PP
\fBParameters\fP
.RS 4
\fIfd\fP 'TODO'\&. 
.br
\fIlength\fP 'TODO'\&. 
.RE
.PP
\fBReturns\fP
.RS 4
'TODO'\&. 
.RE
.PP

.SS "int xpn_simple_open (const char * path, int flags, mode_t mode)"

.PP
'TODO'\&. 'TODO'\&.
.PP
\fBParameters\fP
.RS 4
\fIpath\fP 'TODO'\&. 
.br
\fIflags\fP 'TODO'\&. 
.br
\fImode\fP 'TODO'\&. 
.RE
.PP
\fBReturns\fP
.RS 4
'TODO'\&. 
.RE
.PP

.PP
Definition at line \fB860\fP of file \fBxpn_open\&.c\fP\&.
.PP
References \fBerrno\fP, \fBO_CREAT\fP, \fBO_RDONLY\fP, \fBO_RDWR\fP, \fBO_TRUNC\fP, \fBO_WRONLY\fP, \fBPATH_MAX\fP, \fBXPN_DEBUG_BEGIN_ARGS1\fP, \fBXPN_DEBUG_END_ARGS1\fP, \fBxpn_err()\fP, \fBxpn_internal_creat()\fP, \fBxpn_internal_open()\fP, \fBxpn_internal_remove()\fP, \fBXPN_OK\fP, and \fBxpn_simple_stat()\fP\&.
.PP
Referenced by \fBxpn_fopencookie()\fP, \fBxpn_open()\fP, \fBxpn_simple_fopen()\fP, and \fBxpn_simple_opendir()\fP\&.
.SS "int xpn_simple_preload (const char * virtual_path, const char * storage_path)"

.PP
'TODO'\&. 'TODO'\&.
.PP
\fBParameters\fP
.RS 4
\fIvirtual_path\fP 'TODO'\&. 
.br
\fIstorage_path\fP 'TODO'\&. 
.RE
.PP
\fBReturns\fP
.RS 4
'TODO'\&. 
.RE
.PP

.PP
Definition at line \fB629\fP of file \fBxpn_open\&.c\fP\&.
.PP
References \fBnfi_worker_do_preload()\fP, \fBnfiworker_wait()\fP, \fBop_xpn_flush\fP, \fBPATH_MAX\fP, \fBnfi_worker::thread\fP, \fBnfi_server::wrk\fP, \fBXPN_DATA_SERVER\fP, \fBXPN_DEBUG_BEGIN_ARGS2\fP, \fBXPN_DEBUG_END\fP, \fBxpn_err()\fP, \fBnfi_server::xpn_thread\fP, \fBXpnCreateMetadata()\fP, \fBXPNERR_PARAM\fP, \fBXPNERR_PART_NOEXIST\fP, \fBXPNERR_PATH_NOEXIST\fP, \fBXpnGetAbsolutePath()\fP, \fBXpnGetMetadataPos()\fP, \fBXpnGetPartition()\fP, \fBXpnGetServers()\fP, and \fBXpnGetURLServer()\fP\&.
.PP
Referenced by \fBxpn_preload()\fP\&.
.SS "int xpn_simple_rename (const char * path, const char * newpath)"

.PP
'TODO'\&. 'TODO'\&.
.PP
\fBParameters\fP
.RS 4
\fIpath\fP 'TODO'\&. 
.br
\fInewpath\fP 'TODO'\&. 
.RE
.PP
\fBReturns\fP
.RS 4
'TODO'\&. 
.RE
.PP

.PP
Definition at line \fB1037\fP of file \fBxpn_open\&.c\fP\&.
.PP
References \fBxpn_fh::n_nfih\fP, \fBnfi_ops::nfi_close\fP, \fBnfi_worker_do_rename()\fP, \fBxpn_fh::nfih\fP, \fBnfiworker_wait()\fP, \fBop_xpn_rename\fP, \fBnfi_server::ops\fP, \fBPATH_MAX\fP, \fBnfi_fhandle::priv_fh\fP, \fBnfi_fhandle::server\fP, \fBnfi_worker::thread\fP, \fBnfi_server::wrk\fP, \fBXPN_DATA_SERVER\fP, \fBxpn_err()\fP, \fBnfi_server::xpn_thread\fP, \fBXPNERR_NOMEMORY\fP, \fBXPNERR_PARAM\fP, \fBXPNERR_PART_NOEXIST\fP, \fBXPNERR_PATH_NOEXIST\fP, \fBXpnGetAbsolutePath()\fP, \fBXpnGetPartition()\fP, \fBXpnGetServers()\fP, \fBXpnGetURLServer()\fP, \fBXpnReadMetadata()\fP, and \fBXpnUpdateMetadata()\fP\&.
.PP
Referenced by \fBxpn_rename()\fP\&.
.SS "int xpn_simple_stat (const char * path, struct stat * sb)"

.PP
'TODO'\&. 'TODO'\&.
.PP
\fBParameters\fP
.RS 4
\fIpath\fP 'TODO'\&. 
.br
\fIsb\fP 'TODO'\&. 
.RE
.PP
\fBReturns\fP
.RS 4
'TODO'\&. 
.RE
.PP

.PP
Definition at line \fB1274\fP of file \fBxpn_open\&.c\fP\&.
.PP
References \fBerrno\fP, \fBPATH_MAX\fP, \fBXPN_DEBUG_BEGIN_ARGS1\fP, \fBXPN_DEBUG_END_ARGS1\fP, \fBxpn_err()\fP, \fBXPNERR_PATH_NOEXIST\fP, \fBXpnGetAbsolutePath()\fP, and \fBXpnGetAtribPath()\fP\&.
.PP
Referenced by \fBxpn_simple_open()\fP, and \fBxpn_stat()\fP\&.
.SS "int xpn_simple_truncate (const char * path, off_t length)"

.PP
'TODO'\&. 'TODO'\&.
.PP
\fBParameters\fP
.RS 4
\fIpath\fP 'TODO'\&. 
.br
\fIlength\fP 'TODO'\&. 
.RE
.PP
\fBReturns\fP
.RS 4
'TODO'\&. 
.RE
.PP

.SS "int xpn_simple_unlink (const char * path)"

.PP
'TODO'\&. 'TODO'\&.
.PP
\fBParameters\fP
.RS 4
\fIpath\fP 'TODO'\&. 
.RE
.PP
\fBReturns\fP
.RS 4
'TODO'\&. 
.RE
.PP

.PP
Definition at line \fB1025\fP of file \fBxpn_open\&.c\fP\&.
.PP
References \fBXPN_DEBUG_BEGIN_ARGS1\fP, \fBXPN_DEBUG_END_ARGS1\fP, and \fBxpn_internal_remove()\fP\&.
.PP
Referenced by \fBxpn_unlink()\fP\&.
.SH "Author"
.PP 
Generated automatically by Doxygen for Expand from the source code\&.
