.TH "base_debug.h" 3 "Wed May 24 2023" "Version Expand version 1.0r5" "Expand" \" -*- nroff -*-
.ad l
.nh
.SH NAME
base_debug.h \- Header file to 'TODO'\&.  

.SH SYNOPSIS
.br
.PP
\fC#include <stdio\&.h>\fP
.br
\fC#include <errno\&.h>\fP
.br

.SS "Macros"

.in +1c
.ti -1c
.RI "#define \fBPRINT_TRACE\fP"
.br
.ti -1c
.RI "#define \fBXPN_DEBUG_COMMON_HEADER\fP   fprintf(stderr, '[%s][%s:%d] ', __func__, __FILE__, __LINE__);"
.br
.ti -1c
.RI "#define \fBXPN_DEBUG\fP(format, \&.\&.\&.)"
.br
.ti -1c
.RI "#define \fBXPN_DEBUG_BEGIN_CUSTOM\fP(format, \&.\&.\&.)"
.br
.ti -1c
.RI "#define \fBXPN_DEBUG_END_CUSTOM\fP(format, \&.\&.\&.)"
.br
.ti -1c
.RI "#define \fBXPN_DEBUG_BEGIN\fP   \fBXPN_DEBUG\fP('Begin %s()', __func__)"
.br
.ti -1c
.RI "#define \fBXPN_DEBUG_END\fP   \fBXPN_DEBUG\fP('End   %s()=%d, \fBerrno\fP=%d', __func__, (int)res, \fBerrno\fP)"
.br
.ti -1c
.RI "#define \fBXPN_DEBUG_BEGIN_ARGS1\fP(\&.\&.\&.)   \fBXPN_DEBUG\fP('Begin %s(%s)', __func__, ##__VA_ARGS__)"
.br
.ti -1c
.RI "#define \fBXPN_DEBUG_END_ARGS1\fP(\&.\&.\&.)   \fBXPN_DEBUG\fP('End   %s(%s)=%d, \fBerrno\fP=%d', __func__, ##__VA_ARGS__, (int)res, \fBerrno\fP)"
.br
.ti -1c
.RI "#define \fBXPN_DEBUG_BEGIN_ARGS2\fP(\&.\&.\&.)   \fBXPN_DEBUG\fP('Begin %s(%s, %s)', __func__, ##__VA_ARGS__)"
.br
.ti -1c
.RI "#define \fBXPN_DEBUG_END_ARGS2\fP(\&.\&.\&.)   \fBXPN_DEBUG\fP('End   %s(%s, %s)=%d, \fBerrno\fP=%d', __func__, ##__VA_ARGS__, (int)res, \fBerrno\fP)"
.br
.in -1c
.SS "Variables"

.in +1c
.ti -1c
.RI "int \fBxpn_debug\fP"
.br
.in -1c
.SH "Detailed Description"
.PP 
Header file to 'TODO'\&. 

Header file to 'TODO'\&.
.PP
\fBAuthors\fP
.RS 4
Felix Garcia Carballeira, Diego Camarmas Alonso, Alejandro Calderon Mateos, Luis Miguel Sanchez Garcia, Borja Bergua Guerra 
.RE
.PP
\fBDate\fP
.RS 4
Jul 22, 2021 
.RE
.PP
\fBBug\fP
.RS 4
No known bugs\&. 
.RE
.PP

.PP
Definition in file \fBbase_debug\&.h\fP\&.
.SH "Macro Definition Documentation"
.PP 
.SS "#define PRINT_TRACE"
\fBValue:\fP.PP
.nf
        if (xpn_debug)                                        \\
        {                                                     \\
                fprintf(stderr, "[%s:%d]\\n", __FILE__, __LINE__); \\
        }
.fi

.PP
Definition at line \fB46\fP of file \fBbase_debug\&.h\fP\&.
.SS "#define XPN_DEBUG(format,  \&.\&.\&.)"
\fBValue:\fP.PP
.nf
        if (xpn_debug)                              \\
        {                                           \\
                XPN_DEBUG_COMMON_HEADER                 \\
                fprintf(stderr, format, ##__VA_ARGS__); \\
                fprintf(stderr, "\\n");                  \\
        }
.fi

.PP
Definition at line \fB54\fP of file \fBbase_debug\&.h\fP\&.
.SS "#define XPN_DEBUG_BEGIN   \fBXPN_DEBUG\fP('Begin %s()', __func__)"

.PP
Definition at line \fB85\fP of file \fBbase_debug\&.h\fP\&.
.SS "#define XPN_DEBUG_BEGIN_ARGS1( \&.\&.\&.)   \fBXPN_DEBUG\fP('Begin %s(%s)', __func__, ##__VA_ARGS__)"

.PP
Definition at line \fB88\fP of file \fBbase_debug\&.h\fP\&.
.SS "#define XPN_DEBUG_BEGIN_ARGS2( \&.\&.\&.)   \fBXPN_DEBUG\fP('Begin %s(%s, %s)', __func__, ##__VA_ARGS__)"

.PP
Definition at line \fB91\fP of file \fBbase_debug\&.h\fP\&.
.SS "#define XPN_DEBUG_BEGIN_CUSTOM(format,  \&.\&.\&.)"
\fBValue:\fP.PP
.nf
        if (xpn_debug)                              \\
        {                                           \\
                XPN_DEBUG_COMMON_HEADER                 \\
                fprintf(stderr, "Begin %s", __func__);  \\
                fprintf(stderr, "(");                   \\
                fprintf(stderr, format, ##__VA_ARGS__); \\
                fprintf(stderr, ")");                   \\
                fprintf(stderr, "\\n");                  \\
        }
.fi

.PP
Definition at line \fB62\fP of file \fBbase_debug\&.h\fP\&.
.SS "#define XPN_DEBUG_COMMON_HEADER   fprintf(stderr, '[%s][%s:%d] ', __func__, __FILE__, __LINE__);"

.PP
Definition at line \fB52\fP of file \fBbase_debug\&.h\fP\&.
.SS "#define XPN_DEBUG_END   \fBXPN_DEBUG\fP('End   %s()=%d, \fBerrno\fP=%d', __func__, (int)res, \fBerrno\fP)"

.PP
Definition at line \fB86\fP of file \fBbase_debug\&.h\fP\&.
.SS "#define XPN_DEBUG_END_ARGS1( \&.\&.\&.)   \fBXPN_DEBUG\fP('End   %s(%s)=%d, \fBerrno\fP=%d', __func__, ##__VA_ARGS__, (int)res, \fBerrno\fP)"

.PP
Definition at line \fB89\fP of file \fBbase_debug\&.h\fP\&.
.SS "#define XPN_DEBUG_END_ARGS2( \&.\&.\&.)   \fBXPN_DEBUG\fP('End   %s(%s, %s)=%d, \fBerrno\fP=%d', __func__, ##__VA_ARGS__, (int)res, \fBerrno\fP)"

.PP
Definition at line \fB92\fP of file \fBbase_debug\&.h\fP\&.
.SS "#define XPN_DEBUG_END_CUSTOM(format,  \&.\&.\&.)"
\fBValue:\fP.PP
.nf
        if (xpn_debug)                                         \\
        {                                                      \\
                XPN_DEBUG_COMMON_HEADER                            \\
                fprintf(stderr, "End   %s", __func__);             \\
                fprintf(stderr, "(");                              \\
                fprintf(stderr, format, ##__VA_ARGS__);            \\
                fprintf(stderr, ")");                              \\
                fprintf(stderr, "=%d, errno=%d", (int)res, errno); \\
                fprintf(stderr, "\\n");                             \\
        }
.fi

.PP
Definition at line \fB73\fP of file \fBbase_debug\&.h\fP\&.
.SH "Variable Documentation"
.PP 
.SS "int xpn_debug\fC [extern]\fP"

.PP
Definition at line \fB39\fP of file \fBxpn_init\&.c\fP\&.
.PP
Referenced by \fBxpn_init_partition()\fP\&.
.SH "Author"
.PP 
Generated automatically by Doxygen for Expand from the source code\&.
