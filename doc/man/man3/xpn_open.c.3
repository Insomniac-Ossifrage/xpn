.TH "xpn_open.c" 3 "Wed May 24 2023" "Version Expand version 1.0r5" "Expand" \" -*- nroff -*-
.ad l
.nh
.SH NAME
xpn_open.c \- File to 'TODO'\&.  

.SH SYNOPSIS
.br
.PP
\fC#include 'xpn/xpn_simple/xpn_open\&.h'\fP
.br
\fC#include 'xpn/xpn_simple/xpn_opendir\&.h'\fP
.br

.SS "Macros"

.in +1c
.ti -1c
.RI "#define \fBMASK\fP   0000777"
.br
.in -1c
.SS "Functions"

.in +1c
.ti -1c
.RI "void \fBXpnShowFileTable\fP (void)"
.br
.RI "'TODO'\&. "
.ti -1c
.RI "int \fBXpnSearchSlotFile\fP (int pd, char *path, struct \fBxpn_fh\fP *vfh, struct \fBxpn_metadata\fP *mdata, int mode)"
.br
.RI "'TODO'\&. "
.ti -1c
.RI "int \fBXpnSearchFile\fP (const char *path)"
.br
.RI "'TODO'\&. "
.ti -1c
.RI "int \fBxpn_internal_creat\fP (const char *path, mode_t perm, struct \fBxpn_fh\fP **vfh, struct \fBxpn_metadata\fP **mdata)"
.br
.RI "'TODO'\&. "
.ti -1c
.RI "int \fBxpn_internal_open\fP (const char *path, struct \fBxpn_fh\fP *vfh, struct \fBxpn_metadata\fP *mdata, int mode)"
.br
.RI "'TODO'\&. "
.ti -1c
.RI "int \fBxpn_internal_resize\fP (__attribute__((__unused__)) char *path, __attribute__((__unused__)) struct \fBxpn_fh\fP **vfh, __attribute__((__unused__)) int size)"
.br
.RI "'TODO'\&. "
.ti -1c
.RI "int \fBxpn_internal_fresize\fP (__attribute__((__unused__)) int fd, __attribute__((__unused__)) int size)"
.br
.RI "'TODO'\&. "
.ti -1c
.RI "int \fBxpn_internal_remove\fP (const char *path)"
.br
.RI "'TODO'\&. "
.ti -1c
.RI "int \fBxpn_simple_preload\fP (const char *virtual_path, const char *storage_path)"
.br
.RI "'TODO'\&. "
.ti -1c
.RI "int \fBxpn_simple_flush\fP (const char *virtual_path, const char *storage_path)"
.br
.RI "'TODO'\&. "
.ti -1c
.RI "int \fBxpn_simple_creat\fP (const char *path, mode_t perm)"
.br
.RI "'TODO'\&. "
.ti -1c
.RI "int \fBxpn_simple_open\fP (const char *path, int flags, mode_t mode)"
.br
.RI "'TODO'\&. "
.ti -1c
.RI "int \fBxpn_simple_close\fP (int fd)"
.br
.RI "'TODO'\&. "
.ti -1c
.RI "int \fBxpn_simple_unlink\fP (const char *path)"
.br
.RI "'TODO'\&. "
.ti -1c
.RI "int \fBxpn_simple_rename\fP (const char *path, const char *newpath)"
.br
.RI "'TODO'\&. "
.ti -1c
.RI "int \fBxpn_simple_fstat\fP (int fd, struct stat *sb)"
.br
.RI "'TODO'\&. "
.ti -1c
.RI "int \fBxpn_simple_stat\fP (const char *path, struct stat *sb)"
.br
.RI "'TODO'\&. "
.ti -1c
.RI "int \fBxpn_simple_chown\fP (__attribute__((__unused__)) const char *path, __attribute__((__unused__)) uid_t owner, __attribute__((__unused__)) gid_t group)"
.br
.ti -1c
.RI "int \fBxpn_simple_fchown\fP (int __attribute__((__unused__)) fd, __attribute__((__unused__)) uid_t owner, __attribute__((__unused__)) gid_t group)"
.br
.ti -1c
.RI "int \fBxpn_simple_chmod\fP (__attribute__((__unused__)) const char *path, __attribute__((__unused__)) mode_t mode)"
.br
.ti -1c
.RI "int \fBxpn_simple_fchmod\fP (__attribute__((__unused__)) int fd, __attribute__((__unused__)) mode_t mode)"
.br
.ti -1c
.RI "int \fBxpn_simple_truncate\fP (__attribute__((__unused__)) const char *path, __attribute__((__unused__)) off_t length)"
.br
.ti -1c
.RI "int \fBxpn_simple_ftruncate\fP (__attribute__((__unused__)) int fd, __attribute__((__unused__)) off_t length)"
.br
.ti -1c
.RI "int \fBxpn_simple_dup\fP (int fd)"
.br
.RI "'TODO'\&. "
.ti -1c
.RI "int \fBxpn_simple_dup2\fP (int fd, int fd2)"
.br
.RI "'TODO'\&. "
.in -1c
.SS "Variables"

.in +1c
.ti -1c
.RI "struct \fBxpn_filedesc\fP * \fBxpn_file_table\fP [\fBXPN_MAX_FILE\fP]"
.br
.ti -1c
.RI "int \fBino_counter\fP = 0"
.br
.in -1c
.SH "Detailed Description"
.PP 
File to 'TODO'\&. 

File to 'TODO'\&.
.PP
\fBAuthors\fP
.RS 4
Felix Garcia Carballeira, Diego Camarmas Alonso, Alejandro Calderon Mateos, Luis Miguel Sanchez Garcia, Borja Bergua Guerra 
.RE
.PP
\fBDate\fP
.RS 4
Jul 22, 2021 
.RE
.PP
\fBBug\fP
.RS 4
No known bugs\&. 
.RE
.PP

.PP
Definition in file \fBxpn_open\&.c\fP\&.
.SH "Macro Definition Documentation"
.PP 
.SS "#define MASK   0000777"

.PP
Definition at line \fB38\fP of file \fBxpn_open\&.c\fP\&.
.SH "Function Documentation"
.PP 
.SS "int xpn_internal_creat (const char * path, mode_t perm, struct \fBxpn_fh\fP ** vfh, struct \fBxpn_metadata\fP ** mdata)"

.PP
'TODO'\&. 'TODO'\&.
.PP
\fBParameters\fP
.RS 4
\fIpath\fP 'TODO'\&. 
.br
\fIperm\fP 'TODO'\&. 
.br
\fIvfh\fP 'TODO'\&. 
.br
\fImdata\fP 'TODO'\&. 
.RE
.PP
\fBReturns\fP
.RS 4
'TODO'\&. 
.RE
.PP

.PP
Definition at line \fB177\fP of file \fBxpn_open\&.c\fP\&.
.PP
References \fBnfi_attr::at_mode\fP, \fBxpn_fh::n_nfih\fP, \fBnfi_ops::nfi_close\fP, \fBnfi_worker_do_create()\fP, \fBxpn_fh::nfih\fP, \fBnfiworker_wait()\fP, \fBop_xpn_creat\fP, \fBnfi_server::ops\fP, \fBPATH_MAX\fP, \fBnfi_fhandle::priv_fh\fP, \fBnfi_fhandle::server\fP, \fBnfi_worker::thread\fP, \fBnfi_server::wrk\fP, \fBXPN_DATA_SERVER\fP, \fBXPN_DEBUG_BEGIN_ARGS1\fP, \fBXPN_DEBUG_END\fP, \fBXPN_DEBUG_END_ARGS1\fP, \fBxpn_err()\fP, \fBnfi_server::xpn_thread\fP, \fBXpnCreateMetadata()\fP, \fBXPNERR_CREATE\fP, \fBXPNERR_NOMEMORY\fP, \fBXPNERR_PARAM\fP, \fBXPNERR_PART_NOEXIST\fP, \fBXPNERR_PATH_NOEXIST\fP, \fBXpnGetAbsolutePath()\fP, \fBXpnGetMetadataPos()\fP, \fBXpnGetPartition()\fP, \fBXpnGetServers()\fP, \fBXpnGetURLServer()\fP, and \fBXpnUpdateMetadata()\fP\&.
.PP
Referenced by \fBxpn_simple_creat()\fP, and \fBxpn_simple_open()\fP\&.
.SS "int xpn_internal_fresize (__attribute__((__unused__)) int fd, __attribute__((__unused__)) int size)"

.PP
'TODO'\&. 'TODO'\&.
.PP
\fBParameters\fP
.RS 4
\fIfd\fP 'TODO'\&. 
.br
\fIsize\fP 'TODO'\&. 
.RE
.PP
\fBReturns\fP
.RS 4
'TODO'\&. 
.RE
.PP

.PP
Definition at line \fB510\fP of file \fBxpn_open\&.c\fP\&.
.SS "int xpn_internal_open (const char * path, struct \fBxpn_fh\fP * vfh, struct \fBxpn_metadata\fP * mdata, int mode)"

.PP
'TODO'\&. 'TODO'\&.
.PP
\fBParameters\fP
.RS 4
\fIpath\fP 'TODO'\&. 
.br
\fIvfh\fP 'TODO'\&. 
.br
\fImdata\fP 'TODO'\&. 
.br
\fImode\fP 'TODO'\&. 
.RE
.PP
\fBReturns\fP
.RS 4
'TODO'\&. 
.RE
.PP

.PP
Definition at line \fB392\fP of file \fBxpn_open\&.c\fP\&.
.PP
References \fBxpn_filedesc::links\fP, \fBxpn_fh::n_nfih\fP, \fBxpn_fh::nfih\fP, \fBop_xpn_open\fP, \fBPATH_MAX\fP, \fBXPN_DATA_SERVER\fP, \fBXPN_DEBUG_BEGIN_ARGS1\fP, \fBXPN_DEBUG_END_ARGS1\fP, \fBxpn_err()\fP, \fBxpn_file_table\fP, \fBXPNERR_PART_NOEXIST\fP, \fBXPNERR_PATH_NOEXIST\fP, \fBXpnGetAbsolutePath()\fP, \fBXpnGetPartition()\fP, \fBXpnGetServers()\fP, \fBXpnReadMetadata()\fP, \fBXpnSearchFile()\fP, and \fBXpnSearchSlotFile()\fP\&.
.PP
Referenced by \fBxpn_simple_creat()\fP, and \fBxpn_simple_open()\fP\&.
.SS "int xpn_internal_remove (const char * path)"

.PP
'TODO'\&. 'TODO'\&.
.PP
\fBParameters\fP
.RS 4
\fIpath\fP 'TODO'\&. 
.RE
.PP
\fBReturns\fP
.RS 4
'TODO'\&. 
.RE
.PP

.PP
Definition at line \fB524\fP of file \fBxpn_open\&.c\fP\&.
.PP
References \fBnfi_worker::arg\fP, \fBhash()\fP, \fBnfi_worker_args::is_master_node\fP, \fBnfi_worker_args::master_node\fP, \fBnfi_worker_do_remove()\fP, \fBnfiworker_wait()\fP, \fBop_xpn_remove\fP, \fBPATH_MAX\fP, \fBnfi_worker::thread\fP, \fBnfi_server::wrk\fP, \fBXPN_DATA_SERVER\fP, \fBxpn_err()\fP, \fBXPN_OK\fP, \fBnfi_server::xpn_thread\fP, \fBXPNERR_PARAM\fP, \fBXPNERR_PART_NOEXIST\fP, \fBXPNERR_PATH_NOEXIST\fP, \fBXPNERR_REMOVE\fP, \fBXpnGetAbsolutePath()\fP, \fBXpnGetPartition()\fP, \fBXpnGetServers()\fP, and \fBXpnGetURLServer()\fP\&.
.PP
Referenced by \fBxpn_simple_creat()\fP, \fBxpn_simple_open()\fP, and \fBxpn_simple_unlink()\fP\&.
.SS "int xpn_internal_resize (__attribute__((__unused__)) char * path, __attribute__((__unused__)) struct \fBxpn_fh\fP ** vfh, __attribute__((__unused__)) int size)"

.PP
'TODO'\&. 'TODO'\&.
.PP
\fBParameters\fP
.RS 4
\fIpath\fP 'TODO'\&. 
.br
\fIvfh\fP 'TODO'\&. 
.br
\fIsize\fP 'TODO'\&. 
.RE
.PP
\fBReturns\fP
.RS 4
'TODO'\&. 
.RE
.PP

.PP
Definition at line \fB495\fP of file \fBxpn_open\&.c\fP\&.
.SS "int xpn_simple_chmod (__attribute__((__unused__)) const char * path, __attribute__((__unused__)) mode_t mode)"

.PP
Definition at line \fB1327\fP of file \fBxpn_open\&.c\fP\&.
.PP
Referenced by \fBxpn_chmod()\fP\&.
.SS "int xpn_simple_chown (__attribute__((__unused__)) const char * path, __attribute__((__unused__)) uid_t owner, __attribute__((__unused__)) gid_t group)"

.PP
Definition at line \fB1315\fP of file \fBxpn_open\&.c\fP\&.
.PP
Referenced by \fBxpn_chown()\fP\&.
.SS "int xpn_simple_close (int fd)"

.PP
'TODO'\&. 'TODO'\&.
.PP
\fBParameters\fP
.RS 4
\fIfd\fP 'TODO'\&. 
.RE
.PP
\fBReturns\fP
.RS 4
'TODO'\&. 
.RE
.PP

.PP
Definition at line \fB931\fP of file \fBxpn_open\&.c\fP\&.
.PP
References \fBxpn_filedesc::data_vfh\fP, \fBxpn_filedesc::links\fP, \fBxpn_fh::n_nfih\fP, \fBnfi_ops::nfi_close\fP, \fBxpn_fh::nfih\fP, \fBnfi_server::ops\fP, \fBnfi_fhandle::server\fP, \fBXPN_DEBUG_BEGIN_CUSTOM\fP, \fBXPN_DEBUG_END_CUSTOM\fP, \fBxpn_err()\fP, \fBxpn_file_table\fP, \fBXPN_MAX_FILE\fP, and \fBXPN_OK\fP\&.
.PP
Referenced by \fBxpn_cleaner()\fP, \fBxpn_close()\fP, and \fBxpn_simple_fclose()\fP\&.
.SS "int xpn_simple_creat (const char * path, mode_t perm)"

.PP
'TODO'\&. 'TODO'\&.
.PP
\fBParameters\fP
.RS 4
\fIpath\fP 'TODO'\&. 
.br
\fIperm\fP 'TODO'\&. 
.RE
.PP
\fBReturns\fP
.RS 4
'TODO'\&. 
.RE
.PP

.PP
Definition at line \fB812\fP of file \fBxpn_open\&.c\fP\&.
.PP
References \fBPATH_MAX\fP, \fBXPN_DEBUG_BEGIN_ARGS1\fP, \fBXPN_DEBUG_END_ARGS1\fP, \fBxpn_err()\fP, \fBxpn_internal_creat()\fP, \fBxpn_internal_open()\fP, \fBxpn_internal_remove()\fP, and \fBXPN_OK\fP\&.
.PP
Referenced by \fBxpn_creat()\fP\&.
.SS "int xpn_simple_dup (int fd)"

.PP
'TODO'\&. 'TODO'\&.
.PP
\fBParameters\fP
.RS 4
\fIfd\fP 'TODO'\&. 
.RE
.PP
\fBReturns\fP
.RS 4
'TODO'\&. 
.RE
.PP

.PP
Definition at line \fB1351\fP of file \fBxpn_open\&.c\fP\&.
.PP
References \fBxpn_filedesc::links\fP, \fBxpn_file_table\fP, and \fBXPN_MAX_FILE\fP\&.
.PP
Referenced by \fBxpn_dup()\fP\&.
.SS "int xpn_simple_dup2 (int fd, int fd2)"

.PP
'TODO'\&. 'TODO'\&.
.PP
\fBParameters\fP
.RS 4
\fIfd\fP 'TODO'\&. 
.br
\fIfd2\fP 'TODO'\&. 
.RE
.PP
\fBReturns\fP
.RS 4
'TODO'\&. 
.RE
.PP

.PP
Definition at line \fB1381\fP of file \fBxpn_open\&.c\fP\&.
.PP
References \fBxpn_filedesc::links\fP, \fBxpn_file_table\fP, and \fBXPN_MAX_FILE\fP\&.
.PP
Referenced by \fBxpn_dup2()\fP\&.
.SS "int xpn_simple_fchmod (__attribute__((__unused__)) int fd, __attribute__((__unused__)) mode_t mode)"

.PP
Definition at line \fB1333\fP of file \fBxpn_open\&.c\fP\&.
.PP
Referenced by \fBxpn_fchmod()\fP\&.
.SS "int xpn_simple_fchown (int __attribute__((__unused__)) fd, __attribute__((__unused__)) uid_t owner, __attribute__((__unused__)) gid_t group)"

.PP
Definition at line \fB1321\fP of file \fBxpn_open\&.c\fP\&.
.PP
Referenced by \fBxpn_fchown()\fP\&.
.SS "int xpn_simple_flush (const char * virtual_path, const char * storage_path)"

.PP
'TODO'\&. 'TODO'\&.
.PP
\fBParameters\fP
.RS 4
\fIvirtual_path\fP 'TODO'\&. 
.br
\fIstorage_path\fP 'TODO'\&. 
.RE
.PP
\fBReturns\fP
.RS 4
'TODO'\&. 
.RE
.PP

.PP
Definition at line \fB724\fP of file \fBxpn_open\&.c\fP\&.
.PP
References \fBnfi_worker_do_flush()\fP, \fBnfiworker_wait()\fP, \fBop_xpn_flush\fP, \fBPATH_MAX\fP, \fBnfi_worker::thread\fP, \fBnfi_server::wrk\fP, \fBXPN_DATA_SERVER\fP, \fBxpn_err()\fP, \fBnfi_server::xpn_thread\fP, \fBXpnCreateMetadata()\fP, \fBXPNERR_PARAM\fP, \fBXPNERR_PART_NOEXIST\fP, \fBXPNERR_PATH_NOEXIST\fP, \fBXpnGetAbsolutePath()\fP, \fBXpnGetMetadataPos()\fP, \fBXpnGetPartition()\fP, \fBXpnGetServers()\fP, and \fBXpnGetURLServer()\fP\&.
.PP
Referenced by \fBxpn_flush()\fP\&.
.SS "int xpn_simple_fstat (int fd, struct stat * sb)"

.PP
'TODO'\&. 'TODO'\&.
.PP
\fBParameters\fP
.RS 4
\fIfd\fP 'TODO'\&. 
.br
\fIsb\fP 'TODO'\&. 
.RE
.PP
\fBReturns\fP
.RS 4
'TODO'\&. 
.RE
.PP

.PP
Definition at line \fB1254\fP of file \fBxpn_open\&.c\fP\&.
.PP
References \fBerrno\fP, \fBXPN_DEBUG_BEGIN_CUSTOM\fP, \fBXPN_DEBUG_END_CUSTOM\fP, and \fBXpnGetAtribFd()\fP\&.
.PP
Referenced by \fBxpn_fstat()\fP, and \fBxpn_simple_lseek()\fP\&.
.SS "int xpn_simple_ftruncate (__attribute__((__unused__)) int fd, __attribute__((__unused__)) off_t length)"

.PP
Definition at line \fB1345\fP of file \fBxpn_open\&.c\fP\&.
.PP
Referenced by \fBxpn_ftruncate()\fP\&.
.SS "int xpn_simple_open (const char * path, int flags, mode_t mode)"

.PP
'TODO'\&. 'TODO'\&.
.PP
\fBParameters\fP
.RS 4
\fIpath\fP 'TODO'\&. 
.br
\fIflags\fP 'TODO'\&. 
.br
\fImode\fP 'TODO'\&. 
.RE
.PP
\fBReturns\fP
.RS 4
'TODO'\&. 
.RE
.PP

.PP
Definition at line \fB860\fP of file \fBxpn_open\&.c\fP\&.
.PP
References \fBerrno\fP, \fBO_CREAT\fP, \fBO_RDONLY\fP, \fBO_RDWR\fP, \fBO_TRUNC\fP, \fBO_WRONLY\fP, \fBPATH_MAX\fP, \fBXPN_DEBUG_BEGIN_ARGS1\fP, \fBXPN_DEBUG_END_ARGS1\fP, \fBxpn_err()\fP, \fBxpn_internal_creat()\fP, \fBxpn_internal_open()\fP, \fBxpn_internal_remove()\fP, \fBXPN_OK\fP, and \fBxpn_simple_stat()\fP\&.
.PP
Referenced by \fBxpn_fopencookie()\fP, \fBxpn_open()\fP, \fBxpn_simple_fopen()\fP, and \fBxpn_simple_opendir()\fP\&.
.SS "int xpn_simple_preload (const char * virtual_path, const char * storage_path)"

.PP
'TODO'\&. 'TODO'\&.
.PP
\fBParameters\fP
.RS 4
\fIvirtual_path\fP 'TODO'\&. 
.br
\fIstorage_path\fP 'TODO'\&. 
.RE
.PP
\fBReturns\fP
.RS 4
'TODO'\&. 
.RE
.PP

.PP
Definition at line \fB629\fP of file \fBxpn_open\&.c\fP\&.
.PP
References \fBnfi_worker_do_preload()\fP, \fBnfiworker_wait()\fP, \fBop_xpn_flush\fP, \fBPATH_MAX\fP, \fBnfi_worker::thread\fP, \fBnfi_server::wrk\fP, \fBXPN_DATA_SERVER\fP, \fBXPN_DEBUG_BEGIN_ARGS2\fP, \fBXPN_DEBUG_END\fP, \fBxpn_err()\fP, \fBnfi_server::xpn_thread\fP, \fBXpnCreateMetadata()\fP, \fBXPNERR_PARAM\fP, \fBXPNERR_PART_NOEXIST\fP, \fBXPNERR_PATH_NOEXIST\fP, \fBXpnGetAbsolutePath()\fP, \fBXpnGetMetadataPos()\fP, \fBXpnGetPartition()\fP, \fBXpnGetServers()\fP, and \fBXpnGetURLServer()\fP\&.
.PP
Referenced by \fBxpn_preload()\fP\&.
.SS "int xpn_simple_rename (const char * path, const char * newpath)"

.PP
'TODO'\&. 'TODO'\&.
.PP
\fBParameters\fP
.RS 4
\fIpath\fP 'TODO'\&. 
.br
\fInewpath\fP 'TODO'\&. 
.RE
.PP
\fBReturns\fP
.RS 4
'TODO'\&. 
.RE
.PP

.PP
Definition at line \fB1037\fP of file \fBxpn_open\&.c\fP\&.
.PP
References \fBxpn_fh::n_nfih\fP, \fBnfi_ops::nfi_close\fP, \fBnfi_worker_do_rename()\fP, \fBxpn_fh::nfih\fP, \fBnfiworker_wait()\fP, \fBop_xpn_rename\fP, \fBnfi_server::ops\fP, \fBPATH_MAX\fP, \fBnfi_fhandle::priv_fh\fP, \fBnfi_fhandle::server\fP, \fBnfi_worker::thread\fP, \fBnfi_server::wrk\fP, \fBXPN_DATA_SERVER\fP, \fBxpn_err()\fP, \fBnfi_server::xpn_thread\fP, \fBXPNERR_NOMEMORY\fP, \fBXPNERR_PARAM\fP, \fBXPNERR_PART_NOEXIST\fP, \fBXPNERR_PATH_NOEXIST\fP, \fBXpnGetAbsolutePath()\fP, \fBXpnGetPartition()\fP, \fBXpnGetServers()\fP, \fBXpnGetURLServer()\fP, \fBXpnReadMetadata()\fP, and \fBXpnUpdateMetadata()\fP\&.
.PP
Referenced by \fBxpn_rename()\fP\&.
.SS "int xpn_simple_stat (const char * path, struct stat * sb)"

.PP
'TODO'\&. 'TODO'\&.
.PP
\fBParameters\fP
.RS 4
\fIpath\fP 'TODO'\&. 
.br
\fIsb\fP 'TODO'\&. 
.RE
.PP
\fBReturns\fP
.RS 4
'TODO'\&. 
.RE
.PP

.PP
Definition at line \fB1274\fP of file \fBxpn_open\&.c\fP\&.
.PP
References \fBerrno\fP, \fBPATH_MAX\fP, \fBXPN_DEBUG_BEGIN_ARGS1\fP, \fBXPN_DEBUG_END_ARGS1\fP, \fBxpn_err()\fP, \fBXPNERR_PATH_NOEXIST\fP, \fBXpnGetAbsolutePath()\fP, and \fBXpnGetAtribPath()\fP\&.
.PP
Referenced by \fBxpn_simple_open()\fP, and \fBxpn_stat()\fP\&.
.SS "int xpn_simple_truncate (__attribute__((__unused__)) const char * path, __attribute__((__unused__)) off_t length)"

.PP
Definition at line \fB1339\fP of file \fBxpn_open\&.c\fP\&.
.PP
Referenced by \fBxpn_truncate()\fP\&.
.SS "int xpn_simple_unlink (const char * path)"

.PP
'TODO'\&. 'TODO'\&.
.PP
\fBParameters\fP
.RS 4
\fIpath\fP 'TODO'\&. 
.RE
.PP
\fBReturns\fP
.RS 4
'TODO'\&. 
.RE
.PP

.PP
Definition at line \fB1025\fP of file \fBxpn_open\&.c\fP\&.
.PP
References \fBXPN_DEBUG_BEGIN_ARGS1\fP, \fBXPN_DEBUG_END_ARGS1\fP, and \fBxpn_internal_remove()\fP\&.
.PP
Referenced by \fBxpn_unlink()\fP\&.
.SS "int XpnSearchFile (const char * path)"

.PP
'TODO'\&. 'TODO'\&.
.PP
\fBParameters\fP
.RS 4
\fIpath\fP 'TODO'\&. 
.RE
.PP
\fBReturns\fP
.RS 4
'TODO'\&. 
.RE
.PP

.PP
Definition at line \fB134\fP of file \fBxpn_open\&.c\fP\&.
.PP
References \fBxpn_filedesc::path\fP, \fBXPN_DEBUG_BEGIN_ARGS1\fP, \fBXPN_DEBUG_END\fP, \fBxpn_file_table\fP, and \fBXPN_MAX_FILE\fP\&.
.PP
Referenced by \fBxpn_internal_open()\fP\&.
.SS "int XpnSearchSlotFile (int pd, char * path, struct \fBxpn_fh\fP * vfh, struct \fBxpn_metadata\fP * mdata, int mode)"

.PP
'TODO'\&. 'TODO'\&.
.PP
\fBParameters\fP
.RS 4
\fIpd\fP 'TODO'\&. 
.br
\fIpath\fP 'TODO'\&. 
.br
\fIvfh\fP 'TODO'\&. 
.br
\fImdata\fP 'TODO'\&. 
.br
\fImode\fP 'TODO'\&. 
.RE
.PP
\fBReturns\fP
.RS 4
'TODO'\&. 
.RE
.PP

.PP
Definition at line \fB84\fP of file \fBxpn_open\&.c\fP\&.
.PP
References \fBxpn_partition::block_size\fP, \fBxpn_filedesc::block_size\fP, \fBxpn_filedesc::data_vfh\fP, \fBxpn_filedesc::id\fP, \fBxpn_filedesc::links\fP, \fBxpn_filedesc::mdata\fP, \fBxpn_filedesc::mode\fP, \fBxpn_filedesc::offset\fP, \fBxpn_filedesc::part\fP, \fBxpn_filedesc::path\fP, \fBPATH_MAX\fP, \fBxpn_filedesc::size_threads\fP, \fBxpn_metadata::type\fP, \fBxpn_filedesc::type\fP, \fBXPN_DEBUG_BEGIN_ARGS1\fP, \fBXPN_DEBUG_END_ARGS1\fP, \fBxpn_file_table\fP, \fBXPN_MAX_FILE\fP, \fBXpnGetSizeThreads()\fP, and \fBXpnSearchPart()\fP\&.
.PP
Referenced by \fBxpn_internal_open()\fP\&.
.SS "void XpnShowFileTable (void)"

.PP
'TODO'\&. 'TODO'\&.
.PP
\fBParameters\fP
.RS 4
None\&. 
.RE
.PP
\fBReturns\fP
.RS 4
Nothing\&. 
.RE
.PP

.PP
Definition at line \fB59\fP of file \fBxpn_open\&.c\fP\&.
.PP
References \fBxpn_filedesc::path\fP, \fBxpn_file_table\fP, and \fBXPN_MAX_FILE\fP\&.
.PP
Referenced by \fBxpn_pread()\fP, \fBxpn_simple_read()\fP, \fBxpn_simple_write()\fP, and \fBxpn_sread()\fP\&.
.SH "Variable Documentation"
.PP 
.SS "int ino_counter = 0"

.PP
Definition at line \fB42\fP of file \fBxpn_open\&.c\fP\&.
.SS "struct \fBxpn_filedesc\fP* xpn_file_table[\fBXPN_MAX_FILE\fP]\fC [extern]\fP"

.PP
Definition at line \fB37\fP of file \fBxpn_file\&.c\fP\&.
.PP
Referenced by \fBxpn_internal_open()\fP, \fBxpn_simple_close()\fP, \fBxpn_simple_dup()\fP, \fBxpn_simple_dup2()\fP, \fBXpnSearchFile()\fP, \fBXpnSearchSlotFile()\fP, and \fBXpnShowFileTable()\fP\&.
.SH "Author"
.PP 
Generated automatically by Doxygen for Expand from the source code\&.
