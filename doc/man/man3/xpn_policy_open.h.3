.TH "xpn_policy_open.h" 3 "Wed May 24 2023" "Version Expand version 1.0r5" "Expand" \" -*- nroff -*-
.ad l
.nh
.SH NAME
xpn_policy_open.h \- Header file to 'TODO'\&.  

.SH SYNOPSIS
.br
.PP
\fC#include 'xpn_file\&.h'\fP
.br

.SS "Macros"

.in +1c
.ti -1c
.RI "#define \fBXPN_META_SIZE\fP   (4 * \fBKB\fP)"
.br
.in -1c
.SS "Enumerations"

.in +1c
.ti -1c
.RI "enum \fBxpn_work\fP { \fBno_xpn_op\fP = -1, \fBop_xpn_getattr\fP = 0, \fBop_xpn_setattr\fP = 1, \fBop_xpn_open\fP = 2, \fBop_xpn_creat\fP = 3, \fBop_xpn_close\fP = 4, \fBop_xpn_remove\fP = 5, \fBop_xpn_rename\fP = 6, \fBop_xpn_read\fP = 7, \fBop_xpn_write\fP = 8, \fBop_xpn_mkdir\fP = 9, \fBop_xpn_rmdir\fP = 10, \fBop_xpn_opendir\fP = 11, \fBop_xpn_readdir\fP = 12, \fBop_xpn_closedir\fP = 13, \fBop_xpn_statfs\fP = 14, \fBop_xpn_preload\fP = 15, \fBop_xpn_flush\fP = 16 }"
.br
.in -1c
.SS "Functions"

.in +1c
.ti -1c
.RI "ssize_t \fBXpnGetSizeThreads\fP (struct \fBxpn_partition\fP *p)"
.br
.RI "'TODO'\&. "
.ti -1c
.RI "void \fBXpnGetURLServer\fP (struct \fBnfi_server\fP *serv, char *abs_path, char *url_serv)"
.br
.RI "'TODO'\&. "
.ti -1c
.RI "int \fBXpnGetServers\fP (int op, int pd, char *abs_path, int fd, struct \fBnfi_server\fP ***servers, int type)"
.br
.RI "'TODO'\&. "
.ti -1c
.RI "int \fBXpnGetMetadataPos\fP (struct \fBxpn_metadata\fP *mdata, int pos)"
.br
.RI "'TODO'\&. "
.ti -1c
.RI "int \fBXpnCreateMetadata\fP (struct \fBxpn_metadata\fP *mdata, int pd, char *path)"
.br
.RI "'TODO'\&. "
.ti -1c
.RI "int \fBXpnReadMetadata\fP (struct \fBxpn_metadata\fP *mdata, int nserv, struct \fBnfi_server\fP **servers, struct \fBxpn_fh\fP *fh, char *path, int pd)"
.br
.RI "'TODO'\&. "
.ti -1c
.RI "int \fBXpnUpdateMetadata\fP (struct \fBxpn_metadata\fP *mdata, int nserv, struct \fBnfi_server\fP **servers, struct \fBxpn_fh\fP *fh, char *path)"
.br
.RI "'TODO'\&. "
.ti -1c
.RI "int \fBXpnGetFh\fP (struct \fBxpn_metadata\fP *mdata, struct \fBnfi_fhandle\fP **fh, struct \fBnfi_server\fP *servers, char *path)"
.br
.RI "'TODO'\&. "
.ti -1c
.RI "int \fBXpnGetAtribFd\fP (int fd, struct stat *\fBst\fP)"
.br
.RI "'TODO'\&. "
.ti -1c
.RI "int \fBXpnGetAtribPath\fP (char *path, struct stat *\fBst\fP)"
.br
.RI "'TODO'\&. "
.in -1c
.SH "Detailed Description"
.PP 
Header file to 'TODO'\&. 

Header file to 'TODO'\&.
.PP
\fBAuthors\fP
.RS 4
Felix Garcia Carballeira, Diego Camarmas Alonso, Alejandro Calderon Mateos, Luis Miguel Sanchez Garcia, Borja Bergua Guerra 
.RE
.PP
\fBDate\fP
.RS 4
Jul 22, 2021 
.RE
.PP
\fBBug\fP
.RS 4
No known bugs\&. 
.RE
.PP

.PP
Definition in file \fBxpn_policy_open\&.h\fP\&.
.SH "Macro Definition Documentation"
.PP 
.SS "#define XPN_META_SIZE   (4 * \fBKB\fP)"

.PP
Definition at line \fB45\fP of file \fBxpn_policy_open\&.h\fP\&.
.SH "Enumeration Type Documentation"
.PP 
.SS "enum \fBxpn_work\fP"

.PP
\fBEnumerator\fP
.in +1c
.TP
\fB\fIno_xpn_op \fP\fP
.TP
\fB\fIop_xpn_getattr \fP\fP
.TP
\fB\fIop_xpn_setattr \fP\fP
.TP
\fB\fIop_xpn_open \fP\fP
.TP
\fB\fIop_xpn_creat \fP\fP
.TP
\fB\fIop_xpn_close \fP\fP
.TP
\fB\fIop_xpn_remove \fP\fP
.TP
\fB\fIop_xpn_rename \fP\fP
.TP
\fB\fIop_xpn_read \fP\fP
.TP
\fB\fIop_xpn_write \fP\fP
.TP
\fB\fIop_xpn_mkdir \fP\fP
.TP
\fB\fIop_xpn_rmdir \fP\fP
.TP
\fB\fIop_xpn_opendir \fP\fP
.TP
\fB\fIop_xpn_readdir \fP\fP
.TP
\fB\fIop_xpn_closedir \fP\fP
.TP
\fB\fIop_xpn_statfs \fP\fP
.TP
\fB\fIop_xpn_preload \fP\fP
.TP
\fB\fIop_xpn_flush \fP\fP
.PP
Definition at line \fB47\fP of file \fBxpn_policy_open\&.h\fP\&.
.SH "Function Documentation"
.PP 
.SS "int XpnCreateMetadata (struct \fBxpn_metadata\fP * mdata, int pd, char * path)"

.PP
'TODO'\&. 'TODO'\&.
.PP
\fBParameters\fP
.RS 4
\fImdata\fP 'TODO'\&. 
.br
\fIpd\fP 'TODO'\&. 
.br
\fIpath\fP 'TODO'\&. 
.RE
.PP
\fBReturns\fP
.RS 4
'TODO'\&. 
.RE
.PP

.PP
Definition at line \fB209\fP of file \fBxpn_policy_open\&.c\fP\&.
.PP
References \fBxpn_partition::block_size\fP, \fBxpn_metadata::block_size\fP, \fBxpn_partition::data_nserv\fP, \fBxpn_metadata::data_nserv\fP, \fBhash()\fP, \fBxpn_metadata::id\fP, \fBxpn_partition::meta_nserv\fP, \fBxpn_metadata::meta_nserv\fP, \fBxpn_metadata::policy\fP, \fBxpn_metadata::policy_size\fP, \fBxpn_partition::type\fP, \fBxpn_metadata::type\fP, \fBxpn_metadata::type_policy\fP, \fBxpn_metadata::version\fP, \fBXPN_MAX_PART\fP, and \fBxpn_parttable\fP\&.
.PP
Referenced by \fBxpn_internal_creat()\fP, \fBxpn_simple_flush()\fP, \fBxpn_simple_mkdir()\fP, \fBxpn_simple_preload()\fP, and \fBXpnReadMetadata()\fP\&.
.SS "int XpnGetAtribFd (int fd, struct stat * st)"

.PP
'TODO'\&. 'TODO'\&.
.PP
\fBParameters\fP
.RS 4
\fIfd\fP 'TODO'\&. 
.br
\fIst\fP 'TODO'\&. 
.RE
.PP
\fBReturns\fP
.RS 4
'TODO'\&. 
.RE
.PP

.PP
Definition at line \fB439\fP of file \fBxpn_policy_open\&.c\fP\&.
.PP
References \fBnfi_attr::at_atime\fP, \fBnfi_attr::at_blocks\fP, \fBnfi_attr::at_ctime\fP, \fBnfi_attr::at_mode\fP, \fBnfi_attr::at_mtime\fP, \fBnfi_attr::at_nlink\fP, \fBnfi_attr::at_size\fP, \fBnfi_attr::at_type\fP, \fBxpn_filedesc::id\fP, \fBnfi_worker_do_getattr()\fP, \fBnfiworker_wait()\fP, \fBop_xpn_getattr\fP, \fBxpn_filedesc::path\fP, \fBxpn_metadata::policy\fP, \fBst\fP, \fBnfi_attr::st_dev\fP, \fBnfi_attr::st_ino\fP, \fBXPN_DATA_SERVER\fP, \fBXPN_DEBUG_BEGIN_CUSTOM\fP, \fBXPN_DEBUG_END_CUSTOM\fP, \fBxpn_err()\fP, \fBxpn_file_table\fP, \fBXPN_HEADER_SIZE\fP, \fBXPNERR_REMOVE\fP, \fBXpnGetFh()\fP, and \fBXpnGetServers()\fP\&.
.PP
Referenced by \fBxpn_simple_fstat()\fP\&.
.SS "int XpnGetAtribPath (char * path, struct stat * st)"

.PP
'TODO'\&. 'TODO'\&.
.PP
\fBParameters\fP
.RS 4
\fIpath\fP 'TODO'\&. 
.br
\fIst\fP 'TODO'\&. 
.RE
.PP
\fBReturns\fP
.RS 4
'TODO'\&. 
.RE
.PP

.PP
Definition at line \fB547\fP of file \fBxpn_policy_open\&.c\fP\&.
.PP
References \fBnfi_attr::at_atime\fP, \fBnfi_attr::at_blocks\fP, \fBnfi_attr::at_ctime\fP, \fBnfi_attr::at_mode\fP, \fBnfi_attr::at_mtime\fP, \fBnfi_attr::at_nlink\fP, \fBnfi_attr::at_size\fP, \fBhash()\fP, \fBxpn_fh::n_nfih\fP, \fBnfi_worker_do_getattr()\fP, \fBxpn_fh::nfih\fP, \fBnfiworker_wait()\fP, \fBop_xpn_getattr\fP, \fBPATH_MAX\fP, \fBst\fP, \fBnfi_attr::st_dev\fP, \fBnfi_attr::st_ino\fP, \fBnfi_fhandle::url\fP, \fBXPN_DATA_SERVER\fP, \fBXPN_DEBUG_END_ARGS1\fP, \fBxpn_err()\fP, \fBXPN_HEADER_SIZE\fP, \fBXPNERR_NOMEMORY\fP, \fBXPNERR_PART_NOEXIST\fP, \fBXPNERR_REMOVE\fP, \fBXpnGetPartition()\fP, \fBXpnGetServers()\fP, and \fBXpnGetURLServer()\fP\&.
.PP
Referenced by \fBxpn_simple_stat()\fP\&.
.SS "int XpnGetFh (struct \fBxpn_metadata\fP * mdata, struct \fBnfi_fhandle\fP ** fh, struct \fBnfi_server\fP * servers, char * path)"

.PP
'TODO'\&. 'TODO'\&.
.PP
\fBParameters\fP
.RS 4
\fImdata\fP 'TODO'\&. 
.br
\fIfh\fP 'TODO'\&. 
.br
\fIservers\fP 'TODO'\&. 
.br
\fIpath\fP 'TODO'\&. 
.RE
.PP
\fBReturns\fP
.RS 4
'TODO'\&. 
.RE
.PP

.PP
Definition at line \fB378\fP of file \fBxpn_policy_open\&.c\fP\&.
.PP
References \fBnfi_ops::nfi_open\fP, \fBnfi_ops::nfi_opendir\fP, \fBnfi_server::ops\fP, \fBPATH_MAX\fP, \fBxpn_metadata::type_policy\fP, \fBXPN_DEBUG_BEGIN\fP, \fBXPN_DEBUG_END\fP, and \fBXpnGetURLServer()\fP\&.
.PP
Referenced by \fBxpn_pread()\fP, \fBxpn_pwrite()\fP, \fBxpn_sread()\fP, \fBxpn_swrite()\fP, \fBXpnGetAtribFd()\fP, \fBXpnGetEntry()\fP, and \fBXpnReadMetadata()\fP\&.
.SS "int XpnGetMetadataPos (struct \fBxpn_metadata\fP * mdata, int pos)"

.PP
'TODO'\&. 'TODO'\&.
.PP
\fBParameters\fP
.RS 4
\fImdata\fP 'TODO'\&. 
.br
\fIpos\fP 'TODO'\&. 
.RE
.PP
\fBReturns\fP
.RS 4
'TODO'\&. 
.RE
.PP

.PP
Definition at line \fB274\fP of file \fBxpn_policy_open\&.c\fP\&.
.PP
References \fBxpn_metadata::data_nserv\fP, \fBpolicy::first_node\fP, \fBxpn_metadata::policy\fP, and \fBxpn_metadata::type_policy\fP\&.
.PP
Referenced by \fBxpn_internal_creat()\fP, \fBxpn_pread()\fP, \fBxpn_pwrite()\fP, \fBxpn_simple_flush()\fP, and \fBxpn_simple_preload()\fP\&.
.SS "int XpnGetServers (int op, int pd, char * abs_path, int fd, struct \fBnfi_server\fP *** servers, int type)"

.PP
'TODO'\&. 'TODO'\&.
.PP
\fBParameters\fP
.RS 4
\fIop\fP 'TODO'\&. 
.br
\fIpd\fP 'TODO'\&. 
.br
\fIabs_path\fP 'TODO'\&. 
.br
\fIfd\fP 'TODO'\&. 
.br
\fIservers\fP 'TODO'\&. 
.br
\fItype\fP 'TODO'\&. 
.RE
.PP
\fBReturns\fP
.RS 4
'TODO'\&. 
.RE
.PP

.SS "ssize_t XpnGetSizeThreads (struct \fBxpn_partition\fP * p)"

.PP
'TODO'\&. 'TODO'\&.
.PP
\fBParameters\fP
.RS 4
\fIp\fP 'TODO'\&. 
.RE
.PP
\fBReturns\fP
.RS 4
'TODO'\&. 
.RE
.PP

.PP
Definition at line \fB41\fP of file \fBxpn_policy_open\&.c\fP\&.
.PP
References \fBxpn_partition::size_threads\fP\&.
.PP
Referenced by \fBXpnSearchSlotFile()\fP\&.
.SS "void XpnGetURLServer (struct \fBnfi_server\fP * serv, char * abs_path, char * url_serv)"

.PP
'TODO'\&. 'TODO'\&.
.PP
\fBParameters\fP
.RS 4
\fIserv\fP 'TODO'\&. 
.br
\fIabs_path\fP 'TODO'\&. 
.br
\fIurl_serv\fP 'TODO'\&. 
.RE
.PP
\fBReturns\fP
.RS 4
Nothing\&. 
.RE
.PP

.PP
Definition at line \fB46\fP of file \fBxpn_policy_open\&.c\fP\&.
.PP
References \fBPATH_MAX\fP, and \fBnfi_server::url\fP\&.
.PP
Referenced by \fBxpn_internal_creat()\fP, \fBxpn_internal_remove()\fP, \fBxpn_simple_flush()\fP, \fBxpn_simple_mkdir()\fP, \fBxpn_simple_preload()\fP, \fBxpn_simple_rename()\fP, \fBxpn_simple_rmdir()\fP, \fBXpnGetAtribPath()\fP, and \fBXpnGetFh()\fP\&.
.SS "int XpnReadMetadata (struct \fBxpn_metadata\fP * mdata, int nserv, struct \fBnfi_server\fP ** servers, struct \fBxpn_fh\fP * fh, char * path, int pd)"

.PP
'TODO'\&. 'TODO'\&.
.PP
\fBParameters\fP
.RS 4
\fImdata\fP 'TODO'\&. 
.br
\fInserv\fP 'TODO'\&. 
.br
\fIservers\fP 'TODO'\&. 
.br
\fIfh\fP 'TODO'\&. 
.br
\fIpath\fP 'TODO'\&. 
.br
\fIpd\fP 'TODO'\&. 
.RE
.PP
\fBReturns\fP
.RS 4
'TODO'\&. 
.RE
.PP

.SS "int XpnUpdateMetadata (struct \fBxpn_metadata\fP * mdata, int nserv, struct \fBnfi_server\fP ** servers, struct \fBxpn_fh\fP * fh, char * path)"

.PP
'TODO'\&. 'TODO'\&.
.PP
\fBParameters\fP
.RS 4
\fImdata\fP 'TODO'\&. 
.br
\fInserv\fP 'TODO'\&. 
.br
\fIservers\fP 'TODO'\&. 
.br
\fIfh\fP 'TODO'\&. 
.br
\fIpath\fP 'TODO'\&. 
.RE
.PP
\fBReturns\fP
.RS 4
'TODO'\&. 
.RE
.PP

.SH "Author"
.PP 
Generated automatically by Doxygen for Expand from the source code\&.
